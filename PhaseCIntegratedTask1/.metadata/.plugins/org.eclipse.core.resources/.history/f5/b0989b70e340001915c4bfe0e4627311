package Dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class UserDao<U> implements DAO<U>{
	private static final String url="jdbc:mysql://localhost:3306/db_javajdbc";
	private static final String root="root";
	private static final String password="123456";
	private static Connection conn;
	
	static {
		try {
			Class.forName("com.mysql.jdbc.Driver");
		    conn=DriverManager.getConnection(url,root,password);
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	private Connection getConnection() {
		return conn;
	}
	
	private static void release(Connection conn,PreparedStatement ptmt,ResultSet rs) {
		if(rs!=null) {
			try {
				rs.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		if(ptmt!=null) {
			try {
				ptmt.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		if(conn!=null) {
			try {
				conn.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
	
	private static void release(Connection conn,PreparedStatement ptmt) {
		if(ptmt!=null) {
			try {
				ptmt.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		if(conn!=null) {
			try {
				conn.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
	
	/* add
	 * (non-Javadoc)
	 * @see Dao.DAO#add(Dao.User)
	 */
	@Override
	public void add(User u){
		Connection conn=getConnection();
		String sql=" insert into _user values(?,?,?,?); ";
		PreparedStatement ptmt=null;
		try {
			ptmt=conn.prepareStatement(sql);
			ptmt.setInt(1, u.getId());
			ptmt.setString(2, u.getName());
			ptmt.setString(3, u.getPassword());
			ptmt.setDouble(4, u.getIntegral());
			ptmt.execute();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			release(conn, ptmt);
		}
		
	}

	/* delete
	 * (non-Javadoc)
	 * @see Dao.DAO#delete(java.lang.Object)
	 */
	@Override
	public void delete(U u) {
		Connection conn=getConnection();
		String sql=" delete from _user where id=?; ";
	    PreparedStatement ptmt=null;
		try {
			ptmt=conn.prepareStatement(sql);
			ptmt.setObject(1, u);
			ptmt.execute();
		} catch (SQLException e) {
			e.printStackTrace();
		}finally {
			release(conn, ptmt);
		}
	}

	/* update
	 * (non-Javadoc)
	 * @see Dao.DAO#update(Dao.User)
	 */
	@Override
	public void update(User u) {
		Connection conn=getConnection();
		String sql=" update _user set name=?,password=?,integral=? where id=?; ";
		PreparedStatement ptmt=null;
		try {
			ptmt=conn.prepareStatement(sql);
			ptmt.setString(1, u.getName());
			ptmt.setString(2, u.getPassword());
			ptmt.setDouble(3, u.getIntegral());
			ptmt.setInt(4, u.getId());
			Boolean n=ptmt.execute();
			if(n=true) {
				System.out.println("更新成功");
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			release(conn, ptmt);
		}
		
	}

	/* query
	 * (non-Javadoc)
	 * @see Dao.DAO#query(java.lang.Object)
	 */
	@Override
	public List<User> query(U name) {
		Connection conn=getConnection();
		String sql=" select * from _user where name=?; ";
		List<User> list= new ArrayList<User>();
		PreparedStatement ptmt=null;
		ResultSet rs=null;
		try {
			ptmt=conn.prepareStatement(sql);
			ptmt.setObject(1, name);
			rs=ptmt.executeQuery();
			while(rs.next()) {
				User u=new User();
				u.setId(rs.getInt(1));
				u.setName(rs.getString(2));
				u.setPassword(rs.getString(3));
				u.setIntegral(rs.getDouble(4));
				list.add(u);
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			release(conn, ptmt,rs);
		}
		
		for (User user : list) {
			System.out.println(user.toString());
		}
		return list;
	}

	
	 /*
	  * queryCount
	  * (non-Javadoc)
	  * @see Dao.DAO#queryCount()
	  */
	@Override
	public int queryCount() {
		Connection conn=getConnection();
		int n=0;
		PreparedStatement ptmt=null;
		ResultSet rs=null;
		try {
			String sql=" select Count(*) from _user as Count; ";
			ptmt=conn.prepareStatement(sql);
			rs=ptmt.executeQuery();
			
			while(rs.next()) {
				n=rs.getInt(1);
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			release(conn, ptmt,rs);
		}
		System.out.println("_user表一共有"+n+"行记录");
		
		return n;
	}
	
	public void login(String name, String password) {
		Connection con = null;
		PreparedStatement ptmt = null;
		ResultSet rs = null;
		try {
			con = getConnection();
			String sql ="select * from users where username='"+name+"'"+
						"and password="+"'"+password+"'";
			ptmt = con.prepareStatement(sql);
			rs = ptmt.executeQuery(sql);
			if(rs.next()) {
				System.out.println("欢迎" + rs.getString("username"));
			} else {
				System.out.println("用户名或密码错误！");
			}
		} catch (Exception e) {
			throw new RuntimeException(e);
		} finally {
			release(con, ptmt,rs);
		}		
	}

	
	
	public static void main(String[] args) {
		
		Scanner sc=new Scanner(System.in);
		System.out.println("请输入用户名:");
		String in=sc.next().toString();
		System.out.println("请输入密码:");
		String in2=sc.next().toString();
		
		UserDao<Integer> u=new UserDao<>();
		u.login("in", "in2");
		
		
		
		
		
		
		
	}

}
